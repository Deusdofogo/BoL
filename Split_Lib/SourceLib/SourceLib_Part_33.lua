ldHVybiBTUEVMTFNUQVRFX0lOVkFMSURfVEFSR0VUIGVuZAoKICAgIGlmIHNlbGYuc2tpbGxzaG90VHlwZSB+PSBuaWwgdGhlbgogICAgICAgIGxvY2FsIGlzSW1tb2JpbGUsIHBvc2l0aW9uID0gc2VsZi5WUDpJc0ltbW9iaWxlKHRhcmdldCwgc2VsZi5kZWxheSArIDAuMDcgKyBHZXRMYXRlbmN5KCkgLyAyMDAwLCBzZWxmLndpZHRoLCBzZWxmLnNwZWVkLCBzZWxmLnNvdXJjZVBvc2l0aW9uKQoKICAgICAgICAtLSBPdXQgb2YgcmFuZ2UKICAgICAgICBpZiBzZWxmLnJhbmdlU3FyIDwgX0dldERpc3RhbmNlU3FyKHNlbGYuc291cmNlUmFuZ2UsIHBvc2l0aW9uKSB0aGVuIHJldHVybiBTUEVMTFNUQVRFX09VVF9PRl9SQU5HRSBlbmQKCiAgICAgICAgaWYgaXNJbW1vYmlsZSB0aGVuCgogICAgICAgICAgICAtLSBDb2xsaXNpb24KICAgICAgICAgICAgaWYgbm90IHNlbGYuY29sbGlzaW9uIG9yIChzZWxmLmNvbGxpc2lvbiBhbmQgbm90IHNlbGYuVlA6Q2hlY2tNaW5pb25Db2xsaXNpb24odGFyZ2V0LCBwb3NpdGlvbiwgc2VsZi5kZWxheSArIDAuMDcgKyBHZXRMYXRlbmN5KCkgLyAyMDAwLCBzZWxmLndpZHRoLCBzZWxmLnJhbmdlLCBzZWxmLnNwZWVkLCBzZWxmLnNvdXJjZVBvc2l0aW9uLCBmYWxzZSwgdHJ1ZSkpIHRoZW4KICAgICAgICAgICAgICAgIHJldHVybiBzZWxmOl9fQ2FzdChwb3NpdGlvbi54LCBwb3NpdGlvbi56KQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICByZXR1cm4gU1BFTExTVEFURV9DT0xMSVNJT04KICAgICAgICA