hLmV4dHJhKQogICAgZW5kCgogICAgcmV0dXJuIHJlc3VsdAoKZW5kCgpmdW5jdGlvbiBEYW1hZ2VMaWI6Q2FsY0NvbWJvRGFtYWdlKHRhcmdldCwgY29tYm8pCgogICAgbG9jYWwgdG90YWxkYW1hZ2UgPSAwCgogICAgZm9yIGksIHNwZWxsIGluIGlwYWlycyhjb21ibykgZG8KICAgICAgICBpZiBzcGVsbCA9PSBJdGVtTWFuYWdlcjpHZXRJdGVtKCJERkciKTpHZXRJZCgpIGFuZCBJdGVtTWFuYWdlcjpHZXRJdGVtKCJERkciKTpJc1JlYWR5KCkgdGhlbgogICAgICAgICAgICBzZWxmLk1hZ2ljX2RhbWFnZV9tID0gMS4yCiAgICAgICAgZW5kCiAgICBlbmQKCiAgICBmb3IgaSwgc3BlbGwgaW4gaXBhaXJzKGNvbWJvKSBkbwogICAgICAgIHRvdGFsZGFtYWdlID0gdG90YWxkYW1hZ2UgKyBzZWxmOkNhbGNTcGVsbERhbWFnZSh0YXJnZXQsIHNwZWxsKQogICAgZW5kCgogICAgc2VsZi5NYWdpY19kYW1hZ2VfbSA9IDEKCiAgICByZXR1cm4gdG90YWxkYW1hZ2UKCmVuZAoKLS1bWwogICAgUmV0dXJucyBpZiB0aGUgdW5pdCB3aWxsIGRpZSBhZnRlciB0YWtpbmcgdGhlIGNvbWJvIGRhbWFnZS4KCiAgICBAcGFyYW0gdGFyZ2V0IHwgQ3VuaXQgfCBUYXJnZXQuCiAgICBAcGFyYW0gY29tYm8gIHwgdGFibGUgfCBUaGUgY29tYm8gdGFibGUuCl1dCmZ1bmN0aW9uIERhbWFnZUxpYjpJc0tpbGxhYmxlKHRhcmdldCwgY29tYm8pCiAgICByZXR1cm4gdGFyZ2V0LmhlYWx0aCA8PSBzZWxmOkNhbGNDb21ib0RhbWFnZSh0YXJnZXQsIGNvbWJvKQplbmQKCi0tW1sKICA