gICBbIlhlblpoYW9Td2VlcCJdICAgICAgICAgPSAiWGluWmhhbyIsCiAgICBbIllhc3VvRGFzaFdyYXBwZXIiXSAgICAgPSAiWWFzdW8iCn0KCmZ1bmN0aW9uIEFudGlHYXBjbG9zZXI6X19pbml0KG1lbnUsIGNiKQoKICAgIHNlbGYuY2FsbGJhY2tzID0ge30KICAgIHNlbGYuYWN0aXZlc3BlbGxzID0ge30KICAgIEFkZFRpY2tDYWxsYmFjayhmdW5jdGlvbigpIHNlbGY6T25UaWNrKCkgZW5kKQogICAgQWRkUHJvY2Vzc1NwZWxsQ2FsbGJhY2soZnVuY3Rpb24odW5pdCwgc3BlbGwpIHNlbGY6T25Qcm9jZXNzU3BlbGwodW5pdCwgc3BlbGwpIGVuZCkKICAgIGlmIG1lbnUgdGhlbgogICAgICAgIHNlbGY6QWRkVG9NZW51KG1lbnUpCiAgICBlbmQKICAgIGlmIGNiIHRoZW4KICAgICAgICBzZWxmOkFkZENhbGxiYWNrKGNiKQogICAgZW5kCgplbmQKCmZ1bmN0aW9uIEFudGlHYXBjbG9zZXI6QWRkVG9NZW51KG1lbnUpCgogICAgYXNzZXJ0KG1lbnUsICJBbnRpR2FwY2xvc2VyOiBtZW51IGNhbid0IGJlIG5pbCEiKQogICAgbG9jYWwgU3BlbGxBZGRlZCA9IGZhbHNlCiAgICBsb2NhbCBFbmVteUNoYW1waW9uY2hhck5hbWVzID0ge30KICAgIGZvciBpLCBlbmVteSBpbiBpcGFpcnMoR2V0RW5lbXlIZXJvZXMoKSkgZG8KICAgICAgICB0YWJsZS5pbnNlcnQoRW5lbXlDaGFtcGlvbmNoYXJOYW1lcywgZW5lbXkuY2hhck5hbWUpCiAgICBlbmQKICAgIG1lbnU6YWRkUGFyYW0oIkVuYWJsZWQiLCAiRW5hYmxlZCIsIFNDUklQVF9QQVJBTV9PTk9GRiwgdHJ1ZSk