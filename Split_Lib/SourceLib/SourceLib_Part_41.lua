tYXRpb24gYnkgaXQncyBpZAoKICAgIEBwYXJhbSBhdXRvbWF0aW9uSWQgfCBzdHJpbmcvaW50IHwgVGhlIElEIG9mIHRoZSBhdXRvbWF0aW9uLCBleGFtcGxlICJBbnRpR2FwQ2xvc2VyIgpdXQpmdW5jdGlvbiBTcGVsbDpSZW1vdmVBdXRvbWF0aW9uKGF1dG9tYXRpb25JZCkKCiAgICBhc3NlcnQoYXV0b21hdGlvbklkLCAiU3BlbGw6IGF1dG9tYXRpb25JZCBpcyBpbnZhbGlkISIpCgogICAgZm9yIGluZGV4LCBhdXRvbWF0aW9uIGluIGlwYWlycyhzZWxmLl9hdXRvbWF0aW9ucykgZG8KICAgICAgICBpZiBhdXRvbWF0aW9uLmlkID09IGF1dG9tYXRpb25JZCB0aGVuCiAgICAgICAgICAgIHRhYmxlLnJlbW92ZShzZWxmLl9hdXRvbWF0aW9ucywgaW5kZXgpCiAgICAgICAgICAgIGJyZWFrCiAgICAgICAgZW5kCiAgICBlbmQKCmVuZAoKLS1bWwogICAgQ2xlYXIgYWxsIGF1dG9tYXRpb25zIGFzc2luZ2VkIHRvIHRoaXMgc3BlbGwKXV0KZnVuY3Rpb24gU3BlbGw6Q2xlYXJBdXRvbWF0aW9ucygpCiAgICBzZWxmLl9hdXRvbWF0aW9ucyA9IHt9CmVuZAoKLS1bWwogICAgVHJhY2sgdGhlIHNwZWxsIGxpa2UgaW4gT25Qcm9jZXNzU3BlbGwgdG8gYWRkIG1vcmUgZmVhdHVyZXMgdG8gdGhpcyBTcGVsbCBpbnN0YW5jZQoKICAgIEBwYXJhbSBzcGVsbE5hbWUgfCBzdHJpbmcvdGFibGUgfCBDYXNlIGluc2Vuc2l0aXZlIG5hbWUocykgb2YgdGhlIHNwZWxsCiAgICBAcmV0dXJuICAgICAgICAgIHwgY2xhc3MgICAgICAgIHwgVGhlIGN1cnJlbnQgaW5zdGFuY2U