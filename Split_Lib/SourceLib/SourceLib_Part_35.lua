gICBAcGFyYW0gcGFyYW0yIHwgZmxvYXQgICAgICAgICAgfCBaIGNvb3JkaW5hdGUgb2YgdGhlIHNraWxsc2hvdCBwb3NpdGlvbgogICAgQHBhcmFtIHJldHVybiB8IGludCAgICAgICAgICAgIHwgU3BlbGxTdGF0ZSBvZiB0aGUgY3VycmVudCBzcGVsbApdXQpmdW5jdGlvbiBTcGVsbDpDYXN0KHBhcmFtMSwgcGFyYW0yKQoKICAgIGlmIHNlbGYuc2tpbGxzaG90VHlwZSB+PSBuaWwgYW5kIHBhcmFtMSB+PSBuaWwgYW5kIHBhcmFtMiA9PSBuaWwgdGhlbgoKICAgICAgICAtLSBEb24ndCBjYWxjdWxhdGUgc3R1ZmYgd2hlbiB0YXJnZXQgaXMgaW52YWxpZAogICAgICAgIGlmIG5vdCBWYWxpZFRhcmdldChwYXJhbTEpIHRoZW4gcmV0dXJuIFNQRUxMU1RBVEVfSU5WQUxJRF9UQVJHRVQgZW5kCgogICAgICAgIGxvY2FsIGNhc3RQb3NpdGlvbiwgaGl0Q2hhbmNlLCBwb3NpdGlvbiwgblRhcmdldHMKICAgICAgICBpZiBzZWxmLnNraWxsc2hvdFR5cGUgPT0gU0tJTExTSE9UX0xJTkVBUiBvciBzZWxmLnNraWxsc2hvdFR5cGUgPT0gU0tJTExTSE9UX0NPTkUgdGhlbgogICAgICAgICAgICBpZiBzZWxmLnVzZUFvZSB0aGVuCiAgICAgICAgICAgICAgICBjYXN0UG9zaXRpb24sIGhpdENoYW5jZSwgblRhcmdldHMgPSBzZWxmOkdldFByZWRpY3Rpb24ocGFyYW0xKQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICBjYXN0UG9zaXRpb24sIGhpdENoYW5jZSwgcG9zaXRpb24gPSBzZWxmOkdldFByZWRpY3Rpb24ocGFyYW0xKQogICAgICAgICAgICAgICA