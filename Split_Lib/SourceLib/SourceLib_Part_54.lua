lZCkKICAgICAgICBfQ2lyY2xlLm1vZGUgICAgIHwgaW50ICAgIHwgU2VlIGNpcmNsZSBtb2RlcyBiZWxvdwogICAgICAgIF9DaXJjbGUucG9zaXRpb24gfCB2ZWN0b3IgfCBDZW50ZXIgb2YgdGhlIGNpcmNsZQogICAgICAgIF9DaXJjbGUucmFkaXVzICAgfCBmbG9hdCAgfCBSYWRpdXMgb2YgdGhlIGNpcmNsZQogICAgICAgIC0tIFRoZXNlIGFyZSBub3QgY2hhbmdlYWJsZSB3aGVuIGEgbWVudSBpcyBzZXQKICAgICAgICBfQ2lyY2xlLndpZHRoICAgIHwgaW50ICAgIHwgV2lkdGggb2YgdGhlIGNpcmNsZSBvdXRsaW5lCiAgICAgICAgX0NpcmNsZS5jb2xvciAgICB8IHRhYmxlICB8IENvbG9yIG9mIHRoZSBjaXJjbGUgaW4gYSB0YWxlIGZvcm1hdCB7IGEsIHIsIGcsIGIgfQogICAgICAgIF9DaXJjbGUucXVhbGl0eSAgfCBmbG9hdCAgfCBRdWFsaXR5IG9mIHRoZSBjaXJjbGUsIHRoZSBoaWdoZXIgdGhlIHNtb290aGVyIHRoZSBjaXJjbGUKCiAgICBNZXRob2RzOgogICAgICAgIF9DaXJjbGU6QWRkVG9NZW51KG1lbnUsIHBhcmFtVGV4dCwgYWRkQ29sb3IsIGFkZFdpZHRoLCBhZGRRdWFsaXR5KQogICAgICAgIF9DaXJjbGU6U2V0RW5hYmxlZChlbmFibGVkKQogICAgICAgIF9DaXJjbGU6U2V0MkQoKQogICAgICAgIF9DaXJjbGU6U2V0M0QoKQogICAgICAgIF9DaXJjbGU6U2V0TWluaW1hcCgpCiAgICAgICAgX0NpcmNsZTpTZXRRdWFsaXR5KHF1YWx0aXkpCiAgICAgICAgX0NpcmNsZTpTZXREcmF3Q29uZGl0aW9uKGNvbmRpdGlvbikKICAgICAgICB