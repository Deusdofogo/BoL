gICBhc3NlcnQoaWQgYW5kIHR5cGUoaWQpID09ICJudW1iZXIiLCAiSXRlbTogaWQgaXMgaW52YWxpZCEiKQogICAgYXNzZXJ0KG5vdCByYW5nZSBvciByYW5nZSBhbmQgdHlwZShyYW5nZSkgPT0gIm51bWJlciIsICJJdGVtOiByYW5nZSBpcyBpbnZhbGlkISIpCgogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLnJhbmdlID0gcmFuZ2UKICAgIHNlbGYucmFuZ2VTcXIgPSByYW5nZSBhbmQgcmFuZ2UgKiByYW5nZQogICAgc2VsZi5zbG90ID0gR2V0SW52ZW50b3J5U2xvdEl0ZW0oaWQpCgplbmQKCi0tW1sKICAgIFJldHVybnMgdGhlIGlkIG9mIHRoZSBpdGVtCgogICAgQHJldHVybiB8IGludGVnZXIgfCBJdGVtIGlkCl1dCmZ1bmN0aW9uIEl0ZW06R2V0SWQoKQogICAgcmV0dXJuIHNlbGYuaWQKZW5kCgotLVtbCiAgICBSZXR1cm5zIHRoZSByYW5nZSBvZiB0aGUgaXRlbSwgb25seSB3b3JraW5nIHdoZW4gdGhlIGl0ZW0gd2FzIGRlZmluZWQgd2l0aCBhIHJhbmdlLgoKICAgIEBwYXJhbSBzcXIgfCBib29sZWFuIHwgUmFuZ2Ugc3F1YXJlZCBvciBub3QKICAgIEByZXR1cm4gICAgfCBmbG9hdCAgIHwgUmFuZ2Ugb2YgdGhlIGl0ZW0KXV0KZnVuY3Rpb24gSXRlbTpHZXRSYW5nZShzcXIpCiAgICByZXR1cm4gc3FyIGFuZCBzZWxmLnJhbmdlU3FyIG9yIHNlbGYucmFuZ2UKZW5kCgotLVtbCiAgICBSZXR1cm4gdGhlIHNsb3QgdGhlIGl0ZW0gaXMgaW4KCiAgICBAcmV0dXJuIHwgaW50ZWdlciB8IFNsb3QgaXQKXV0KZnVuY3Rpb24gSXRlbTpHZXRTbG90KCk