gICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcnJycgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgQW50aUdhcGNsb3NlciAtIFN0YXkgYXdheSBwbGVhc2UsIHRoYW5rcy4KCiAgICBBbmQgYWdhaW4gdW5kb2N1bWVudGVkIGJ5IGhvbmRhIC0uLQpdXQpjbGFzcyAnQW50aUdhcGNsb3NlcicKCmxvY2FsIF9HQVBDTE9TRVJfVEFSR0VURUQsIF9HQVBDTE9TRVJfU0tJTExTSE9UID0gMSwgMgotLUFkZCBvbmx5IHZlcnkgZmFzdCBza2lsbHNob3RzL3RhcmdldGVkIHNwZWxscyBzaW5jZSB2UHJlZGljdGlvbiB3aWxsIGhhbmRsZSB0aGUgc2xvdyBkYXNoZXMgdGhhdCB3aWxsIHRyaWdnZXIgT25EYXNoCmxvY2FsIF9HQVBDTE9TRVJfU1BFTExTID0gewogICAgWyJBYXRyb3hRIl0gICAgICAgICAgICAgID0gIkFhdHJveCIsCiAgICBbIkFrYWxpU2hhZG93RGFuY2UiXSAgICAgPSAiQWthbGkiLAogICAgWyJIZWFkYnV0dCJdICAgICAgICAgICAgID0gIkFsaXN0YXIiLAogICAgWyJGaW9yYVEiXSAgICAgICAgICAgICAgID0gIkZpb3JhIiwKICAgIFsiRGlhbmFUZWxlcG9ydCJdICAgICAgICA9ICJEaWFuYSIsCiAgICBbIkVsaXNlU3BpZGVyUUNhc3QiXSAgICAgPSAiRWxpc2UiLAogICAgWyJGaXp6UGllcmNpbmdTdHJpa2UiXSAgID0gIkZpenoiLAogICAgWyJHcmFnYXNFIl0gICAgICAgICAgICAgID0gIkdyYWdhcyIsCiAgICBbIkhlY2FyaW1VbHQiXSAgICA