tb3ZlQ2lyY2xlKGNpcmNsZSkKICAgICAgICBEcmF3TWFuYWdlcjpDcmVhdGVDaXJjbGUocG9zaXRpb24sIHJhZGl1cywgd2lkdGgsIGNvbG9yKQogICAgICAgIERyYXdNYW5hZ2VyOk9uRHJhdygpCgpdXQpjbGFzcyAnRHJhd01hbmFnZXInCgotLVtbCiAgICBOZXcgaW5zdGFuY2Ugb2YgRHJhd01hbmFnZXIKXV0KZnVuY3Rpb24gRHJhd01hbmFnZXI6X19pbml0KCkKCiAgICBzZWxmLm9iamVjdHMgPSB7fQoKICAgIEFkZERyYXdDYWxsYmFjayhmdW5jdGlvbigpIHNlbGY6T25EcmF3KCkgZW5kKQoKZW5kCgotLVtbCiAgICBBZGQgYW4gZXhpc3RpbmcgY2lyY2xlIHRvIHRoZSBkcmF3IG1hbmFnZXIKCiAgICBAcGFyYW0gY2lyY2xlIHwgY2xhc3MgfCBfQ2lyY2xlIGluc3RhbmNlCl1dCmZ1bmN0aW9uIERyYXdNYW5hZ2VyOkFkZENpcmNsZShjaXJjbGUpCgogICAgYXNzZXJ0KGNpcmNsZSwgIkRyYXdNYW5hZ2VyOiBjaXJjbGUgaXMgaW52YWxpZCEiKQoKICAgIGZvciBfLCBvYmplY3QgaW4gaXBhaXJzKHNlbGYub2JqZWN0cykgZG8KICAgICAgICBhc3NlcnQob2JqZWN0IH49IGNpcmNsZSwgIkRyYXdNYW5hZ2VyOiBvYmplY3Qgd2FzIGFscmVhZHkgaW4gRHJhd01hbmFnZXIiKQogICAgZW5kCgogICAgdGFibGUuaW5zZXJ0KHNlbGYub2JqZWN0cywgY2lyY2xlKQoKZW5kCgotLVtbCiAgICBSZW1vdmVzIGEgY2lyY2xlIGZyb20gdGhlIGRyYXcgbWFuYWdlcgoKICAgIEBwYXJhbSBjaXJjbGUgfCBjbGFzcyB8IF9DaXJjbGUgaW5zdGFuY2UKXV0KZnVuY3R