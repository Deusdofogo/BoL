gKiB5LnNvdXJjZS5tYXhNYW5hIGVuZCwKfQoKLS1bWwogICAgTmV3IGluc3RhbmNlIG9mIERhbWFnZUxpYgoKICAgIEBwYXJhbSBzb3VyY2UgfCBDdW5pdCB8IFNvdXJjZSB1bml0IChhdHRhY2tlciwgcGxheWVyIGJ5IGRlZmF1bHQpCl1dCmZ1bmN0aW9uIERhbWFnZUxpYjpfX2luaXQoc291cmNlKQoKICAgIHNlbGYuc291cmNlcyA9IHt9CiAgICBzZWxmLnNvdXJjZSA9IHNvdXJjZSBvciBwbGF5ZXIKCiAgICAtLURhbWFnZSBtdWx0aXBsaWNhdG9yczoKICAgIHNlbGYuTWFnaWNfZGFtYWdlX20gICAgPSAxCiAgICBzZWxmLlBoeXNpY2FsX2RhbWFnZV9tID0gMQoKICAgIC0tIE1vc3QgY29tbW9uIGRhbWFnZSBzb3VyY2VzCiAgICBzZWxmOlJlZ2lzdGVyRGFtYWdlU291cmNlKF9JR05JVEUsIF9UUlVFLCAwLCAwLCBfVFJVRSwgX0FQLCAwLCBmdW5jdGlvbigpIHJldHVybiBfSUdOSVRFIGFuZCAoc2VsZi5zb3VyY2U6Q2FuVXNlU3BlbGwoX0lHTklURSkgPT0gUkVBRFkpIGVuZCwgZnVuY3Rpb24oKSByZXR1cm4gKDUwICsgMjAgKiBzZWxmLnNvdXJjZS5sZXZlbCkgZW5kKQogICAgc2VsZjpSZWdpc3RlckRhbWFnZVNvdXJjZShJdGVtTWFuYWdlcjpHZXRJdGVtKCJERkciKTpHZXRJZCgpLCBfTUFHSUMsIDAsIDAsIF9NQUdJQywgX0FQLCAwLCBmdW5jdGlvbigpIHJldHVybiBJdGVtTWFuYWdlcjpHZXRJdGVtKCJERkciKTpHZXRTbG90KCkgYW5kIChzZWxmLnNvdXJjZTpDYW5Vc2VTcGVsbChJdGVtTWFuYWdlcjpHZXRJdGVtKCJERkciKTpHZXRTbG9