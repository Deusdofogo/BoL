8IGZsb2F0ICB8IFJhbmdlIG9mIHRoZSBzcGVsbCwgcGxlYXNlIGRvIE5PVCBjaGFuZ2UgdGhpcyB2YWx1ZSwgdXNlIFNwZWxsOlNldFJhbmdlKCkgaW5zdGVhZAogICAgICAgIFNwZWxsLnJhbmdlU3FyICAgICAgIHwgZmxvYXQgIHwgU3F1YXJlZCByYW5nZSBvZiB0aGUgc3BlbGwsIHBsZWFzZSBkbyBOT1QgY2hhbmdlIHRoaXMgdmFsdWUsIHVzZSBTcGVsbDpTZXRSYW5nZSgpIGluc3RlYWQKICAgICAgICBTcGVsbC5wYWNrZXRDYXN0ICAgICB8IGJvb2wgICB8IFNldCBwYWNrZXQgY2FzdCBzdGF0ZQogICAgICAgIC0tIFRoaXMgb25seSBhcHBsaWVzIGZvciBza2lsbHNob3RzCiAgICAgICAgU3BlbGwuc291cmNlUG9zaXRpb24gfCB2ZWN0b3IgfCBGcm9tIHdoZXJlIHRoZSBzcGVsbCBpcyBjYXN0ZWQsIGRlZmF1bHQ6IHBsYXllcgogICAgICAgIFNwZWxsLnNvdXJjZVJhbmdlICAgIHwgdmVjdG9yIHwgRnJvbSB3aGVyZSB0aGUgcmFuZ2Ugc2hvdWxkIGJlIGNhbGN1bGF0ZWQsIGRlZmF1bHQ6IHBsYXllcgogICAgICAgIC0tIFRoaXMgb25seSBhcHBsaWVzIGZvciBBT0Ugc2tpbGxzaG90cwogICAgICAgIFNwZWxsLm1pblRhcmdldHNBb2UgIHwgaW50ICAgIHwgU2V0IG1pbmltdW0gdGFyZ2V0cyBmb3IgQU9FIGRhbWFnZQoKICAgIE1ldGhvZHM6CiAgICAgICAgU3BlbGw6U2V0UmFuZ2UocmFuZ2UpCiAgICAgICAgU3BlbGw6U2V0U291cmNlKHNvdXJjZSkKICAgICAgICBTcGVsbDpTZXRTb3VyY2VQb3NpdGlvbihzb3VyY2UpCiAgICAgICAgU3BlbGw