gICAtLSBPdXQgb2YgcmFuZ2UKICAgICAgICBpZiBzZWxmLnJhbmdlU3FyIDwgX0dldERpc3RhbmNlU3FyKHNlbGYuc291cmNlUmFuZ2UsIHBvc2l0aW9uKSB0aGVuIHJldHVybiBTUEVMTFNUQVRFX09VVF9PRl9SQU5HRSBlbmQKCiAgICAgICAgaWYgaXNEYXNoaW5nIGFuZCBjYW5IaXQgdGhlbgoKICAgICAgICAgICAgLS0gQ29sbGlzaW9uCiAgICAgICAgICAgIGlmIG5vdCBzZWxmLmNvbGxpc2lvbiBvciBzZWxmLmNvbGxpc2lvbiBhbmQgbm90IHNlbGYuVlA6Q2hlY2tNaW5pb25Db2xsaXNpb24odGFyZ2V0LCBwb3NpdGlvbiwgc2VsZi5kZWxheSArIDAuMDcgKyBHZXRMYXRlbmN5KCkgLyAyMDAwLCBzZWxmLndpZHRoLCBzZWxmLnJhbmdlLCBzZWxmLnNwZWVkLCBzZWxmLnNvdXJjZVBvc2l0aW9uLCBmYWxzZSwgdHJ1ZSkgdGhlbgogICAgICAgICAgICAgICAgcmV0dXJuIHNlbGY6X19DYXN0KHNlbGYuc3BlbGxJZCwgcG9zaXRpb24ueCwgcG9zaXRpb24ueikKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgcmV0dXJuIFNQRUxMU1RBVEVfQ09MTElTSU9OCiAgICAgICAgICAgIGVuZAoKICAgICAgICBlbHNlaWYgbm90IGlzRGFzaGluZyB0aGVuIHJldHVybiBTUEVMTFNUQVRFX05PVF9EQVNISU5HCiAgICAgICAgZWxzZSByZXR1cm4gU1BFTExTVEFURV9EQVNISU5HX0NBTlRfSElUIGVuZAogICAgZWxzZQogICAgICAgIGxvY2FsIGlzRGFzaGluZywgY2FuSGl0LCBwb3NpdGlvbiA9IHNlbGYuVlA6SXNEYXNoaW5nKHRhcmdldCwgMC4yNSA