dmVyc2lvbiA9IDEuMDUKCmlmIG5vdCBfRy5IaWRlUGVybWFTaG93IHRoZW4KCV9HLkhpZGVQZXJtYVNob3cgPSB7fQplbmQKCmZ1bmN0aW9uIEN1c3RvbVBlcm1hU2hvdyhUZXh0VmFyLCBWYWx1ZVZhciwgVmlzaWJsZVZhciwgUGVybWFDb2xvclZhciwgT25Db2xvclZhciwgT2ZmQ29sb3JWYXIsIEluZGV4VmFyKQoJaWYgbm90IF9HLl9DUFNfQWRkZWQgdGhlbgoJCWlmIG5vdCBEcmF3Q3VzdG9tVGV4dCB0aGVuCgkJCV9HLkRyYXdDdXN0b21UZXh0ID0gX0cuRHJhd1RleHQKCQkJX0cuRHJhd1RleHQgPSBmdW5jdGlvbihBcmcxLCBBcmcyLCBBcmczLCBBcmc0LCBBcmc1KSBfRHJhd1RleHQoQXJnMSwgQXJnMiwgQXJnMywgQXJnNCwgQXJnNSkgZW5kCgkJCV9HLkRyYXdDdXN0b21MaW5lID0gX0cuRHJhd0xpbmUKCQkJX0cuRHJhd0xpbmUgPSBmdW5jdGlvbihBcmcxLCBBcmcyLCBBcmczLCBBcmc0LCBBcmc1LCBBcmc2KSBfRHJhd0xpbmUoQXJnMSwgQXJnMiwgQXJnMywgQXJnNCwgQXJnNSwgQXJnNikgZW5kCgkJCU9sZFBlcm1hU2hvd1RhYmxlLCBPbGRQZXJtYVNob3dDb3VudCwgSXNQZXJtYVNob3dTdGF0dXNPbiwgUGVybWFTaG93VGFibGUgPSB7fSwgMCwge30sIHt9CgkJCUFkZERyYXdDYWxsYmFjayhfRHJhd0N1c3RvbVBlcm1hU2hvdykKCQkJX0cuX0NQU19BZGRlZCA9IHRydWUKCQllbHNlCgkJCU9sZFBlcm1hU2hvd1RhYmxlLCBPbGRQZXJtYVNob3dDb3VudCwgSXNQZXJtYVNob3dTdGF0dXNPbiwgUGVybWFTaG93VGFibGUgPSB7fSwgMCw