ge30sIHt9CgkJCUFkZERyYXdDYWxsYmFjayhfRHJhd0N1c3RvbVBlcm1hU2hvdykKCQkJX0cuX0NQU19BZGRlZCA9IHRydWUKCQllbmQKCWVuZAoKCWlmIEluZGV4VmFyID09IG5pbCB0aGVuCgkJbG9jYWwgX0NQU19VcGRhdGVkID0gZmFsc2UKCQlmb3IgaT0xLCAjUGVybWFTaG93VGFibGUgZG8KCQkJaWYgUGVybWFTaG93VGFibGVbaV1bIlRleHRWYXIiXSA9PSBUZXh0VmFyIHRoZW4KCQkJCVBlcm1hU2hvd1RhYmxlW2ldWyJWYWx1ZVZhciJdLCBQZXJtYVNob3dUYWJsZVtpXVsiVmlzaWJsZVZhciJdLF9DUFNfVXBkYXRlZCA9IFZhbHVlVmFyLFZpc2libGVWYXIsdHJ1ZQoJCQkJUGVybWFTaG93VGFibGVbaV1bIlBlcm1hQ29sb3JWYXIiXSxQZXJtYVNob3dUYWJsZVtpXVsiT25Db2xvclZhciJdLFBlcm1hU2hvd1RhYmxlW2ldWyJPZmZDb2xvclZhciJdID0gUGVybWFDb2xvclZhciwgT25Db2xvclZhciwgT2ZmQ29sb3JWYXIKCQkJZW5kCgkJZW5kCgoJCWlmIG5vdCBfQ1BTX1VwZGF0ZWQgdGhlbgoJCQlQZXJtYVNob3dUYWJsZVsjUGVybWFTaG93VGFibGUrMV0gPSB7WyJUZXh0VmFyIl0gPSBUZXh0VmFyLCBbIlZhbHVlVmFyIl0gPSBWYWx1ZVZhciwgWyJWaXNpYmxlVmFyIl0gPSBWaXNpYmxlVmFyLCBbIlBlcm1hQ29sb3JWYXIiXSA9IFBlcm1hQ29sb3JWYXIsIFsiT25Db2xvclZhciJdID0gT25Db2xvclZhciwgWyJPZmZDb2xvclZhciJdID0gT2ZmQ29sb3JWYXJ9CgkJZW5kCgllbHNlCgkJbG9jYWwgX0NQU19VcGRhdGVkID0gZmFsc2UKCQl