ob3dUYWJsZSA9IHt9LCAwLCB7fSwge30NCgkJCUFkZERyYXdDYWxsYmFjayhfRHJhd0N1c3RvbVBlcm1hU2hvdykNCgkJCV9HLl9DUFNfQWRkZWQgPSB0cnVlDQoJCWVuZA0KCWVuZA0KDQoJaWYgSW5kZXhWYXIgPT0gbmlsIHRoZW4NCgkJbG9jYWwgX0NQU19VcGRhdGVkID0gZmFsc2UNCgkJZm9yIGk9MSwgI1Blcm1hU2hvd1RhYmxlIGRvDQoJCQlpZiBQZXJtYVNob3dUYWJsZVtpXVsiVGV4dFZhciJdID09IFRleHRWYXIgdGhlbg0KCQkJCVBlcm1hU2hvd1RhYmxlW2ldWyJWYWx1ZVZhciJdLCBQZXJtYVNob3dUYWJsZVtpXVsiVmlzaWJsZVZhciJdLF9DUFNfVXBkYXRlZCA9IFZhbHVlVmFyLFZpc2libGVWYXIsdHJ1ZQ0KCQkJCVBlcm1hU2hvd1RhYmxlW2ldWyJQZXJtYUNvbG9yVmFyIl0sUGVybWFTaG93VGFibGVbaV1bIk9uQ29sb3JWYXIiXSxQZXJtYVNob3dUYWJsZVtpXVsiT2ZmQ29sb3JWYXIiXSA9IFBlcm1hQ29sb3JWYXIsIE9uQ29sb3JWYXIsIE9mZkNvbG9yVmFyDQoJCQllbmQNCgkJZW5kDQoNCgkJaWYgbm90IF9DUFNfVXBkYXRlZCB0aGVuDQoJCQlQZXJtYVNob3dUYWJsZVsjUGVybWFTaG93VGFibGUrMV0gPSB7WyJUZXh0VmFyIl0gPSBUZXh0VmFyLCBbIlZhbHVlVmFyIl0gPSBWYWx1ZVZhciwgWyJWaXNpYmxlVmFyIl0gPSBWaXNpYmxlVmFyLCBbIlBlcm1hQ29sb3JWYXIiXSA9IFBlcm1hQ29sb3JWYXIsIFsiT25Db2xvclZhciJdID0gT25Db2xvclZhciwgWyJPZmZDb2xvclZhciJdID0gT2ZmQ29sb3JWYXJ9DQoJCWVuZA0KCWV