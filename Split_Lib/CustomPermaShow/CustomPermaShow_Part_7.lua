NYXN0ZXIuY29sb3IuZ3JleSkKCQkJRHJhd0N1c3RvbUxpbmUoX0NQU19NYXN0ZXIucHggKyBfQ1BTX01hc3Rlci5yb3csIF9DUFNfTWFzdGVyLnB5MSArIF9DUFNfTWFzdGVyLm1pZFNpemUsIF9DUFNfTWFzdGVyLnB4ICsgX0NQU19NYXN0ZXIud2lkdGggKyAxLCBfQ1BTX01hc3Rlci5weTEgKyBfQ1BTX01hc3Rlci5taWRTaXplLCBfQ1BTX01hc3Rlci5jZWxsU2l6ZSwgKENvbG9yVmFyKSkKCQkJRHJhd0N1c3RvbVRleHQoVGV4dFZhciwgX0NQU19NYXN0ZXIuZm9udFNpemUsIF9DUFNfTWFzdGVyLnB4ICsgX0NQU19NYXN0ZXIucm93ICsgMSwgX0NQU19NYXN0ZXIucHkxLCBfQ1BTX01hc3Rlci5jb2xvci5ncmV5KQoJCQlfQ1BTX01hc3Rlci5weTEgPSBfQ1BTX01hc3Rlci5weTEgKyBfQ1BTX01hc3Rlci5jZWxsU2l6ZQoJCQlfQ1BTX01hc3Rlci5weTIgPSBfQ1BTX01hc3Rlci5weTIgKyBfQ1BTX01hc3Rlci5jZWxsU2l6ZQoJCWVuZAoJZW5kCmVuZAoKZnVuY3Rpb24gX0RyYXdUZXh0KEFyZzEsIEFyZzIsIEFyZzMsIEFyZzQsIEFyZzUpCglfQ1BTX01hc3RlciA9IEdldFNhdmUoInNjcmlwdENvbmZpZyIpWyJNYXN0ZXIiXQoJX0NQU19NYXN0ZXIucm93ID0gKFdJTkRPV19XIGFuZCBtYXRoLnJvdW5kKFdJTkRPV19XIC8gNi40KSBvciAxNjApICogMC43CglpZiBBcmczID09IF9DUFNfTWFzdGVyLnB4IHRoZW4KCQlpZiBub3QgKF9HLkhpZGVQZXJtYVNob3dbQXJnMV0gfj0gbmlsIGFuZCBfRy5IaWRlUGVybWFTaG93W0FyZzFdID09IHRydWUpIHR