lcm1hU2hvd1RhYmxlW2ldLlRleHRWYXJdID09IHRydWUpIGFuZCBub3QgX0cuSGlkZUN1c3RvbVBlcm1hU2hvdyBhbmQgdHlwZShQZXJtYVNob3dUYWJsZVtpXS5UZXh0VmFyKSB+PSAibnVtYmVyIiB0aGVuDQoJCQkJRHJhd0N1c3RvbUxpbmUoX0NQU19NYXN0ZXIucHggLSAxLCBfQ1BTX01hc3Rlci5weTEgKyBfQ1BTX01hc3Rlci5taWRTaXplLCBfQ1BTX01hc3Rlci5weCArIF9DUFNfTWFzdGVyLnJvdyAtIDEsIF9DUFNfTWFzdGVyLnB5MSArIF9DUFNfTWFzdGVyLm1pZFNpemUsIF9DUFNfTWFzdGVyLmNlbGxTaXplLCBfQ1BTX01hc3Rlci5jb2xvci5sZ3JleSkNCgkJCQlEcmF3Q3VzdG9tVGV4dChQZXJtYVNob3dUYWJsZVtpXS5UZXh0VmFyLCBfQ1BTX01hc3Rlci5mb250U2l6ZSwgX0NQU19NYXN0ZXIucHgsIF9DUFNfTWFzdGVyLnB5MSwgX0NQU19NYXN0ZXIuY29sb3IuZ3JleSkNCgkJCQlEcmF3Q3VzdG9tTGluZShfQ1BTX01hc3Rlci5weCArIF9DUFNfTWFzdGVyLnJvdywgX0NQU19NYXN0ZXIucHkxICsgX0NQU19NYXN0ZXIubWlkU2l6ZSwgX0NQU19NYXN0ZXIucHggKyBfQ1BTX01hc3Rlci53aWR0aCArIDEsIF9DUFNfTWFzdGVyLnB5MSArIF9DUFNfTWFzdGVyLm1pZFNpemUsIF9DUFNfTWFzdGVyLmNlbGxTaXplLCBDb2xvclZhcikNCgkJCQlEcmF3Q3VzdG9tVGV4dChUZXh0VmFyLCBfQ1BTX01hc3Rlci5mb250U2l6ZSwgX0NQU19NYXN0ZXIucHggKyBfQ1BTX01hc3Rlci5yb3cgKyAxLCBfQ1BTX01hc3Rlci5weTEsIF9DUFNfTWFzdGV