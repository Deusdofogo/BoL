xIHRoZW4KCQlIaXRDaGFuY2UgPSAyCgllbmQKCQoJaWYgc2VsZjppc1Nsb3dlZCh1bml0LCBkZWxheSwgc3BlZWQsIGZyb20pIHRoZW4KCQlIaXRDaGFuY2UgPSAyCgllbmQKCglpZiBQb3NpdGlvbiBhbmQgQ2FzdFBvc2l0aW9uIGFuZCAoKHJhZGl1cyAvIHVuaXQubXMgPj0gZGVsYXkgKyBHZXREaXN0YW5jZShmcm9tLCBDYXN0UG9zaXRpb24pL3NwZWVkKSBvciAocmFkaXVzIC8gdW5pdC5tcyA+PSBkZWxheSArIEdldERpc3RhbmNlKGZyb20sIFBvc2l0aW9uKS9zcGVlZCkpIHRoZW4KCQlIaXRDaGFuY2UgPSAzCgllbmQKCQktLVtbQW5nbGUgdG9vIHdpZGVdXQoJaWYgVmVjdG9yKGZyb20pOmFuZ2xlQmV0d2VlbihWZWN0b3IodW5pdC52aXNpb25Qb3MpLCBWZWN0b3IoQ2FzdFBvc2l0aW9uKSkgPiA2MCB0aGVuCgkJSGl0Q2hhbmNlID0gMQoJZW5kCgkKCWlmIG5vdCBQb3NpdGlvbiBvciBub3QgQ2FzdFBvc2l0aW9uIHRoZW4KCQlIaXRDaGFuY2UgPSAwCgkJQ2FzdFBvc2l0aW9uID0gVmVjdG9yKEN1cnJlbnRXYXlQb2ludHNbI0N1cnJlbnRXYXlQb2ludHNdLngsIDAsIEN1cnJlbnRXYXlQb2ludHNbI0N1cnJlbnRXYXlQb2ludHNdLnkpCgkJUG9zaXRpb24gPSBDYXN0UG9zaXRpb24KCWVuZAoKCWlmIEdldERpc3RhbmNlKG15SGVyby52aXNpb25Qb3MsIHVuaXQudmlzaW9uUG9zKSA8IDI1MCB0aGVuCgkJSGl0Q2hhbmNlID0gMgoJCVBvc2l0aW9uLCBDYXN0UG9zaXRpb24gPSBzZWxmOkNhbGN1bGF0ZVRhcmdldFBvc2l0aW9uKHVuaXQsIGRlbGF