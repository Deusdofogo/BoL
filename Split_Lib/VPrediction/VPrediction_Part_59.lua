JRCA9PSBteUhlcm8ubmV0d29ya0lEIHRoZW4KCQlmcm9tID0gVmVjdG9yKG15SGVyby52aXNpb25Qb3MpCgllbmQKCWxvY2FsIElzRnJvbU15SGVybyA9IEdldERpc3RhbmNlU3FyKGZyb20sIG15SGVyby52aXNpb25Qb3MpIDwgNTAqNTAgYW5kIHRydWUgb3IgZmFsc2UKCglkZWxheSA9IGRlbGF5ICsgKDAuMDcgKyBHZXRMYXRlbmN5KCkgLyAyMDAwKQoJCglsb2NhbCBQb3NpdGlvbiwgQ2FzdFBvc2l0aW9uLCBIaXRDaGFuY2UgPSBWZWN0b3IodW5pdC52aXNpb25Qb3MpLCBWZWN0b3IodW5pdC52aXNpb25Qb3MpLCAwCglsb2NhbCBUYXJnZXREYXNoaW5nLCBDYW5IaXREYXNoaW5nLCBEYXNoUG9zaXRpb24gPSBzZWxmOklzRGFzaGluZyh1bml0LCBkZWxheSwgcmFkaXVzLCBzcGVlZCwgZnJvbSkKCWxvY2FsIFRhcmdldEltbW9iaWxlLCBJbW1vYmlsZVBvcywgSW1tb2JpbGVDYXN0UG9zaXRpb24gPSBzZWxmOklzSW1tb2JpbGUodW5pdCwgZGVsYXksIHJhZGl1cywgc3BlZWQsIGZyb20sIHNwZWxsdHlwZSkKCWxvY2FsIFZpc2libGVTaW5jZSA9IHNlbGYuVGFyZ2V0c1Zpc2libGVbdW5pdC5uZXR3b3JrSURdIGFuZCBzZWxmLlRhcmdldHNWaXNpYmxlW3VuaXQubmV0d29ya0lEXSBvciBzZWxmOkdldFRpbWUoKQoKCWlmIHVuaXQudHlwZSB+PSBteUhlcm8udHlwZSB0aGVuCgkJUG9zaXRpb24sIENhc3RQb3NpdGlvbiA9IHNlbGY6Q2FsY3VsYXRlVGFyZ2V0UG9zaXRpb24odW5pdCwgZGVsYXksIHJhZGl1cywgc3BlZWQsIGZyb20sIHNwZWxsdHlwZSk