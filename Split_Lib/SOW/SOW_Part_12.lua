vaW50KTpub3JtYWxpemVkKCkgKiA1MAoJCQkJZW5kCgkJCQlzZWxmOk1vdmVUbyhwb2ludC54LCBwb2ludC56KQoJCQllbmQKCQllbHNlCgkJCXNlbGY6TW92ZVRvKHBvaW50LngsIHBvaW50LnopCgkJZW5kCgllbmQKZW5kCgpmdW5jdGlvbiBTT1c6SXNBdHRhY2soU3BlbGxOYW1lKQoJcmV0dXJuIChTcGVsbE5hbWU6bG93ZXIoKTpmaW5kKCJhdHRhY2siKSBvciB0YWJsZS5jb250YWlucyhzZWxmLkF0dGFja1RhYmxlLCBTcGVsbE5hbWU6bG93ZXIoKSkpIGFuZCBub3QgdGFibGUuY29udGFpbnMoc2VsZi5Ob0F0dGFja1RhYmxlLCBTcGVsbE5hbWU6bG93ZXIoKSkKZW5kCgpmdW5jdGlvbiBTT1c6SXNBQVJlc2V0KFNwZWxsTmFtZSkKCWxvY2FsIFNwZWxsSUQKCWlmIFNwZWxsTmFtZTpsb3dlcigpID09IG15SGVybzpHZXRTcGVsbERhdGEoX1EpLm5hbWU6bG93ZXIoKSB0aGVuCgkJU3BlbGxJRCA9IF9RCgllbHNlaWYgU3BlbGxOYW1lOmxvd2VyKCkgPT0gbXlIZXJvOkdldFNwZWxsRGF0YShfVykubmFtZTpsb3dlcigpIHRoZW4KCQlTcGVsbElEID0gX1cKCWVsc2VpZiBTcGVsbE5hbWU6bG93ZXIoKSA9PSBteUhlcm86R2V0U3BlbGxEYXRhKF9FKS5uYW1lOmxvd2VyKCkgdGhlbgoJCVNwZWxsSUQgPSBfRQoJZWxzZWlmIFNwZWxsTmFtZTpsb3dlcigpID09IG15SGVybzpHZXRTcGVsbERhdGEoX1IpLm5hbWU6bG93ZXIoKSB0aGVuCgkJU3BlbGxJRCA9IF9SCgllbmQKCglpZiBTcGVsbElEIHRoZW4KCQlyZXR1cm4gc2VsZi5BdHRhY2tSZXNldFRhYmx